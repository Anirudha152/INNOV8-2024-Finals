## Education:
- Bachelors of Science : Computer Science :: Georgia State University

## Experience:
- Software Engineer :: Worked with product managers to implement in game telemetry Implemented various features and fixed bugs required for soft launch
- Software Engineer :: Established first playable prototype in Unity 3D, with player-controlled units that utilized a navigation mesh while obeying rotational and movement constraints Created custom code to drive vehicle-tread animation based on vehicle velocity
- Software Engineer :: Worked with artists to develop player animation and movement code using Unity 3Ds legacy animation and navigation mesh agent Lead the evaluation and eventual adoption of Unity's Mecanim Animation System to drive character animation Wrote code to support player interaction with in-world game objects Created procedural loot animation system using physics to animate loot drops Prototyped player exploration game mode with multiple control schemes and UI
- Software Engineer :: Extended the developer cheat system to allow in-game cheats to be used on production servers by entitled user accounts to facilitate QA testing and debugging of live builds Worked with a team to develop AI bots from a single rough prototype to a full roster of 5 bots released as part of first time user experience Developed AI behaviors, and a system that used dynamic navigation mesh obstacles allowing bots to avoid incoming enemy fire and move away from fire at current location Profiled and optimized server-side (Lua/C++) code to improve performance added new AI editor and in-game functionality to support game design requirements
- Software Engineer :: Enhanced and debugged (C#) server-side skirmish AI unit production and base defense, and developed code to allow the skirmish AI Generals to use taunts against opponents Established localization pipeline and workflow using EA shared technology database and tools Integrated an EA shared technology UI system (C++) into the Frostbite game client codebase Implemented HUD features such as objective system, and contextual unit information display Designed and implemented (C++) client, and (C#) server code for queued player command system, and commands including moving, attacking, changing stance, and selecting units Developed code to handle assigning units and structures to control groups Refactored hotkey system to allow hotkeys to trigger different actions based on context
- Software Engineer :: Refactored server logging system initialization to improve log coverage at startup.
- Software Engineer :: Developed automated load test scenarios that included report generation for historical analysis Implemented UI features for the Game Remote Administration Tool for customer service agents
- Software Engineer :: Performed feature development and maintenance of platform products, including the crash service, real-time metrics visualization system, and the data collection and transformation service Designed and developed Distributed Testing Service, a client-server based system designed to run functional, load, and scalability tests, and store results in a database Reclaimed and updated code from game team code base, and released it as part of the Trion Platform Foundation code base.
- Software Engineer :: Worked in an interrupt-driven environment to implement features, fix bugs and create tools designed to improve the workflow for content creators during daily development, utilizing C++ Unreal Script, UnrealEd, and MAXScript.
- Software Engineer :: Contributed to the Unreal Engine 3 based Core Technology Platform code used across all of Midway's next generation PC, Xbox 360, and PS3 titles by fixing bugs, performing integrations, and reclaiming code from game development teams.

## Skills:
- 3D
- alpha
- animation
- AI
- C++
- client-server
- codebase
- content
- client
- customer service
- data collection
- database
- debugging
- editor
- features
- functional
- game design
- logging
- C#
- navigation
- next
- developer
- physics
- QA
- real-time
- servers
- Script
- Strategy
- telemetry
- workflow

## Sector:
- Software Engineering

## Timeline:
- JOB :: 08-2010 -- CURRENT :: Software Engineer :: MEDIUM
- JOB :: 09-2008 -- 08-2010 :: Software Engineer :: MEDIUM
- JOB :: 08-2006 -- 08-2008 :: Software Engineer :: MEDIUM
- EDU :: 00-2006 :: Bachelors of Science : Computer Science :: LOW
